{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaSatate.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","console","log","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","tareaContext","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","agregarTarea","errortarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","tareaReducer","params","tareas","error","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wNAIeA,EAFOC,0BCEPC,EAFKD,0BCsGLE,EAnGD,SAACC,GAGX,IAAMJ,EAAgBK,qBAAWC,GACzBC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,cAEVN,EAAcG,qBAAWI,GACvBC,EAAwCR,EAAxCQ,QAASC,EAA+BT,EAA/BS,YAAaC,EAAkBV,EAAlBU,cAG5BC,qBAAU,WACLF,GACCP,EAAMU,QAAQC,KAAK,cAGpBL,GACCF,EAAcE,EAAQM,IAAKN,EAAQO,aAGxC,CAACP,EAASC,EAAaP,EAAMU,UAnBX,MAsBaI,mBAAS,CACvCC,MAAO,GACPC,SAAU,KAxBO,mBAsBdC,EAtBc,KAsBLC,EAtBK,KA4BbH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAETG,EAAW,SAAAC,GACbF,EAAe,2BACRD,GADO,kBAETG,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAmBnC,OACI,sBAAKC,UAAU,eAAf,UACMrB,EAAW,sBAAKqB,UAAS,iBAAYrB,EAAOU,WAAjC,cAAgDV,EAAOS,IAAvD,OAAwE,KAErF,sBAAKY,UAAU,8BAAf,UACI,mDAEA,uBACIC,SAtBC,SAAAL,GACbA,EAAEM,iBAGkB,KAAjBX,EAAMY,QAAqC,KAApBX,EAASW,QAC/BvB,EAAc,oCAAqC,gBAIvDI,EAAc,CAAEO,QAAOC,cAYf,UAGI,sBAAKQ,UAAU,aAAf,UACI,uBAAOI,QAAQ,QAAf,mBACA,uBACIC,KAAK,QACLC,GAAG,QACHR,KAAK,QACLS,YAAY,WACZR,MAAOR,EACPI,SAAUA,OAIlB,sBAAKK,UAAU,aAAf,UACI,uBAAOI,QAAQ,WAAf,sBACA,uBACIC,KAAK,WACLC,GAAG,WACHR,KAAK,WACLS,YAAY,cACZR,MAAOP,EACPG,SAAUA,OAIlB,qBAAKK,UAAU,aAAf,SACI,uBAAOK,KAAK,SAASL,UAAU,6BAA6BD,MAAM,2BAI1E,cAAC,IAAD,CAAMS,GAAI,gBAAiBR,UAAU,gBAArC,mCCsDDS,EAjJK,SAACjC,GAGjB,IAAMJ,EAAgBK,qBAAWC,GACzBC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,cAEVN,EAAcG,qBAAWI,GACvBC,EAA4CR,EAA5CQ,QAASC,EAAmCT,EAAnCS,YAAc2B,EAAqBpC,EAArBoC,iBAG/BzB,qBAAU,WACHF,GACCP,EAAMU,QAAQC,KAAK,cAGpBL,GACCF,EAAcE,EAAQM,IAAKN,EAAQO,aAGxC,CAACP,EAASC,EAAaP,EAAMU,UAnBL,MAsBOI,mBAAS,CACvCqB,OAAQ,GACRpB,MAAO,GACPC,SAAU,GACVoB,UAAW,KA1BY,mBAsBpBnB,EAtBoB,KAsBXC,EAtBW,KA8BnBiB,EAAuClB,EAAvCkB,OAAQpB,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAUoB,EAAcnB,EAAdmB,UAE3BjB,EAAW,SAAAC,GACbF,EAAe,2BACRD,GADO,kBAETG,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAwCnC,OACI,sBAAKC,UAAU,eAAf,UACMrB,EAAW,sBAAKqB,UAAS,iBAAYrB,EAAOU,WAAjC,cAAgDV,EAAOS,IAAvD,OAAwE,KACrF,sBAAKY,UAAU,8BAAf,UACI,oDAEA,uBACIC,SA1CC,SAAAL,GACbA,EAAEM,iBAGoB,KAAlBS,EAAOR,QACU,KAAjBZ,EAAMY,QACc,KAApBX,EAASW,QACY,KAArBS,EAAUT,OAMXX,EAASqB,OAAS,EACjBjC,EAAc,gDAAiD,gBAKhEY,IAAaoB,GAMhBF,EAAiB,CACbC,SACApB,QACAC,aAEJsB,QAAQC,IAAI,wBAVRnC,EAAc,+BAAgC,gBAZ1CA,EAAc,oCAAqC,iBAiCnD,UAGI,sBAAKoB,UAAU,aAAf,UACI,uBAAOI,QAAQ,SAAf,oBACA,uBACIC,KAAK,OACLC,GAAG,SACHR,KAAK,SACLS,YAAY,YACZR,MAAOY,EACPhB,SAAUA,OAIlB,sBAAKK,UAAU,aAAf,UACI,uBAAOI,QAAQ,QAAf,mBACA,uBACIC,KAAK,QACLC,GAAG,QACHR,KAAK,QACLS,YAAY,WACZR,MAAOR,EACPI,SAAUA,OAIlB,sBAAKK,UAAU,aAAf,UACI,uBAAOI,QAAQ,WAAf,sBACA,uBACIC,KAAK,WACLC,GAAG,WACHR,KAAK,WACLS,YAAY,cACZR,MAAOP,EACPG,SAAUA,OAIlB,sBAAKK,UAAU,aAAf,UACI,uBAAOI,QAAQ,YAAf,gCACA,uBACIC,KAAK,WACLC,GAAG,YACHR,KAAK,YACLS,YAAY,qBACZR,MAAOa,EACPjB,SAAUA,OAIlB,qBAAKK,UAAU,aAAf,SACI,uBAAOK,KAAK,SAASL,UAAU,6BAA6BD,MAAM,qBAI1E,cAAC,IAAD,CAAMS,GAAI,IAAKR,UAAU,gBAAzB,+CC1IDgB,EAFS3C,0BCqFT4C,EApFO,WAGlB,IAAMC,EAAmBzC,qBAAWuC,GAC5BG,EAAmFD,EAAnFC,WAAYC,EAAuEF,EAAvEE,gBAAkBC,EAAqDH,EAArDG,kBAAmBC,EAAkCJ,EAAlCI,gBAAiBC,EAAiBL,EAAjBK,aAJlD,EAQYjC,mBAAS,CACzCqB,OAAQ,KATY,mBAQjBa,EARiB,KAQPC,EARO,KAahBd,EAAWa,EAAXb,OAkCR,OACI,eAAC,WAAD,WACI,wBACIN,KAAK,SACLL,UAAU,6BACV0B,QATc,WACtBL,KAKI,4BAMEF,EAEU,uBACInB,UAAU,4BACVC,SAnCC,SAAAL,GACrBA,EAAEM,iBAGY,KAAXS,GAMHW,EAAgBE,GAGhBC,EAAgB,CACZd,OAAQ,MATRY,KA4BY,UAII,uBACIlB,KAAK,OACLL,UAAU,aACVO,YAAY,kBACZT,KAAK,SACLC,MAAOY,EACPhB,SAnDH,SAAAC,GACrB6B,EAAgB,2BACTD,GADQ,kBAEV5B,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,YAmDX,uBACIM,KAAK,SACLL,UAAU,6BACVD,MAAM,wBAIlB,KAENqB,EAAkB,mBAAGpB,UAAU,gBAAb,mDAA0E,SC9E3F2B,EAFMtD,0BC4BNuD,EA1BE,SAAC,GAAgB,IAAfJ,EAAc,EAAdA,SAGPK,EADiBpD,qBAAWuC,GAC5Ba,eAIAC,EADcrD,qBAAWsD,GACzBD,cAQR,OACI,6BACI,yBACIzB,KAAK,SACLL,UAAU,gBACV0B,QAAU,kBAVMpB,EAUoBkB,EAASQ,IATrDH,EAAevB,QACfwB,EAAcxB,GAFU,IAAAA,GAOpB,UAIEkB,EAASb,OAJX,U,gBCgCGsB,EA/CU,WAGrB,IAAMf,EAAmBzC,qBAAWuC,GAC5BlC,EAAyCoC,EAAzCpC,QAASoD,EAAgChB,EAAhCgB,UAAWC,EAAqBjB,EAArBiB,iBAEtB/D,EAAgBK,qBAAWC,GACzBC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,cAehB,OAXAK,qBAAU,WAEHH,GACCF,EAAcE,EAAQM,IAAKN,EAAQO,WAGvC8C,MAED,CAACrD,IAGoB,IAArBoD,EAAUrB,OAAsB,uEAI/B,qBAAIb,UAAU,oBAAd,UAEMrB,EAAa,qBAAKqB,UAAS,iBAAYrB,EAAOU,UAAnB,KAAd,SAAgDV,EAAOS,MAAgB,KAEtF,cAACgD,EAAA,EAAD,UACKF,EAAUG,KAAI,SAAAb,GAAQ,OACnB,cAACc,EAAA,EAAD,CAEIC,QAAS,IACTC,WAAW,WAHf,SAKI,cAAC,EAAD,CACIhB,SAAUA,KALTA,EAASQ,cCpBvBS,EAfC,WACZ,OACI,kCACI,sCAAQ,4CAER,cAAC,EAAD,IAEA,sBAAKzC,UAAU,YAAf,UACI,+CACA,cAAC,EAAD,WCkBD0C,EA3BD,WAGV,IAAMpE,EAAcG,qBAAWI,GACvBY,EAA+CnB,EAA/CmB,QAASkD,EAAsCrE,EAAtCqE,mBAAoBC,EAAkBtE,EAAlBsE,aASrC,OAPA3D,qBAAU,WACN0D,MAED,IAKC,yBAAQ3C,UAAU,aAAlB,UACKP,EAAU,oBAAGO,UAAU,iBAAb,kBAAmC,iCAAOP,EAAQkB,OAAf,OAAnC,OAAyE,KAEpF,qBAAKX,UAAU,gBAAf,SACI,wBACIA,UAAU,mCACV0B,QAAS,kBAAMkB,KAFnB,oCCwFDC,EA1GG,WAGd,IACQrB,EADiB/C,qBAAWuC,GAC5BQ,SAGFsB,EAAgBrE,qBAAWsD,GAC1BgB,EAA4GD,EAA5GC,kBAAmBC,EAAyFF,EAAzFE,aAAcC,EAA2EH,EAA3EG,WAAYC,EAA+DJ,EAA/DI,aAAcpB,EAAiDgB,EAAjDhB,cAAeqB,EAAkCL,EAAlCK,gBAAiBC,EAAiBN,EAAjBM,aAIlGnE,qBAAU,WAEFoE,EADqB,OAAtBN,EACcA,EAEA,CACTpC,OAAQ,OAGjB,CAAGoC,IApBc,MAuBUzD,mBAAS,CACnCqB,OAAQ,KAxBQ,mBAuBb2C,EAvBa,KAuBND,EAvBM,KA4BZ1C,EAAW2C,EAAX3C,OAGR,IAAIa,EAAU,OAAO,KA/BD,IAkCbK,EAlCa,YAkCML,EAlCN,MA4EpB,OACI,sBAAKxB,UAAU,aAAf,UACI,uBACIC,SAnCK,SAAAL,GACbA,EAAEM,iBAGmB,KAAlBS,EAAOR,QAMe,OAAtB4C,GAEEO,EAAM9B,SAAWK,EAAeG,IAEhCgB,EAAaM,KAGdH,EAAgBG,GAGhBF,KAGJtC,QAAQC,IAAIc,EAAeG,KAC3BF,EAAcD,EAAeG,KAG7BqB,EAAa,CACT1C,OAAQ,MAvBRuC,KA6BA,UAGI,qBAAKlD,UAAU,mBAAf,SACI,uBACIK,KAAK,OACLL,UAAU,aACVO,YAAY,kBACZT,KAAK,SACLC,MAAOY,EACPhB,SAnDC,SAAAC,GACjByD,EAAa,2BACNC,GADK,kBAEP1D,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,cAoDvB,qBAAKC,UAAU,mBAAf,SACI,uBACIK,KAAK,SACLL,UAAU,wCACVD,MAAOgD,EAAoB,eAAiB,uBAKvDE,EAAa,mBAAGjD,UAAU,gBAAb,kDAAwE,SCvBnFuD,EA9ED,SAAC,GAAa,IAAZD,EAAW,EAAXA,MAIJ9B,EADiB/C,qBAAWuC,GAC5BQ,SAGFsB,EAAgBrE,qBAAWsD,GAEzByB,EAAsEV,EAAtEU,cAAe1B,EAAuDgB,EAAvDhB,cAAe2B,EAAwCX,EAAxCW,mBAAoBN,EAAoBL,EAApBK,gBAInDtB,EAbgB,YAaEL,EAbF,MAsBjBkC,EAAgB,SAAAJ,GACfA,EAAMK,OACLL,EAAMK,QAAS,EAEfL,EAAMK,QAAS,EAEnBR,EAAgBG,IAQpB,OACI,qBAAItD,UAAU,eAAd,UACI,8BAAIsD,EAAM3C,OAAV,OAEA,qBAAKX,UAAU,SAAf,SACKsD,EAAMK,OAGC,wBACItD,KAAK,SACLL,UAAU,WACV0B,QAAS,kBAAMgC,EAAcJ,IAHjC,sBAQA,wBACIjD,KAAK,SACLL,UAAU,aACV0B,QAAS,kBAAMgC,EAAcJ,IAHjC,0BASZ,sBAAKtD,UAAU,WAAf,UACI,wBACIK,KAAK,SACLL,UAAU,mBACV0B,QAAS,kBAjCA,SAAA4B,GACrBG,EAAmBH,GAgCQM,CAAiBN,IAHpC,oBAMA,wBACIjD,KAAK,SACLL,UAAU,qBACV0B,QAAS,kBAvDHpB,EAuDuBgD,EAAMtB,IAtD/CwB,EAAclD,EAAIuB,EAAeG,UACjCF,EAAcD,EAAeG,KAFX,IAAA1B,GAoDV,6BCNDuD,EA5DO,WAGlB,IAAM3C,EAAmBzC,qBAAWuC,GAC5BQ,EAA+BN,EAA/BM,SAAUsC,EAAqB5C,EAArB4C,iBAIVC,EADctF,qBAAWsD,GACzBgC,eAGR,IAAIvC,EAAU,OAAO,wDAXG,IAcjBK,EAdiB,YAcEL,EAdF,MAqBxB,OACI,eAAC,WAAD,WACI,4CAAeK,EAAelB,OAA9B,OAEA,oBAAIX,UAAU,iBAAd,SAC+B,IAA1B+D,EAAelD,OACT,oBAAIb,UAAU,QAAd,SAAsB,gDAEzB,cAACoC,EAAA,EAAD,UACC2B,EAAe1B,KAAI,SAAAiB,GAAK,OACrB,cAAChB,EAAA,EAAD,CAEIC,QAAS,IACTC,WAAW,QAHf,SAKI,cAAC,EAAD,CACIc,MAAOA,KALNA,EAAMhD,WAmB3B,wBACID,KAAK,SACLL,UAAU,mBACV0B,QArCY,WACpBoC,EAAiBjC,EAAeG,MAiC5B,wCCpBGgC,MA9Bf,WAGI,IACQrB,EADYlE,qBAAWI,GACvB8D,mBAOR,OALA1D,qBAAU,WACN0D,MAED,IAGC,sBAAK3C,UAAU,iBAAf,UACI,cAAC,EAAD,IAEA,sBAAKA,UAAU,oBAAf,UACI,cAAC,EAAD,IAEA,iCACI,cAAC,EAAD,IAEA,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,gB,gCC7BXiE,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBAEjBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAEjBC,EAAe,eACfC,EAAmB,mBACnBC,EAAgB,gBAEhBC,EAAiB,iBACjBC,EAAiB,iBAEjBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAgB,gBAChBC,GAAc,cACdC,GAAgB,gBCdd,YAACC,EAAOC,GACnB,OAAOA,EAAOnF,MACV,KAAK4D,EACD,OAAO,2BACAsB,GADP,IAEIpE,YAAY,IAEpB,KAAK+C,EACD,OAAO,2BACAqB,GADP,IAEIrD,UAAWsD,EAAOC,UAE1B,KAAKtB,EACD,OAAO,2BACAoB,GADP,IAEIrD,UAAU,GAAD,mBAAMqD,EAAMrD,WAAZ,CAAuBsD,EAAOC,UACvCtE,YAAY,EACZC,iBAAiB,IAEzB,KAAKgD,EACD,OAAO,2BACAmB,GADP,IAEInE,iBAAiB,IAEzB,KAAKiD,EACD,OAAO,2BACAkB,GADP,IAEI/D,SAAU+D,EAAMrD,UAAUwD,QAAO,SAAAlE,GAAQ,OAAIA,EAASQ,MAAQwD,EAAOC,aAE7E,KAAKnB,EACD,OAAO,2BACAiB,GADP,IAEIrD,UAAWqD,EAAMrD,UAAUwD,QAAO,SAAAlE,GAAQ,OAAIA,EAASQ,MAAQwD,EAAOC,WACtEjE,SAAU,OAElB,KAAK+C,EACD,OAAO,2BACAgB,GADP,IAEIzG,QAAS0G,EAAOC,UAExB,QACI,OAAOF,I,SC9CJI,G,QAJMC,EAAMC,OAAO,CAC9BC,QAAUC,kDCiJCC,GAjIO,SAAAxH,GAElB,IAF2B,EAWDyH,qBAAWC,GAThB,CACjBhE,UAAY,GACZf,YAAa,EACbC,iBAAiB,EACjBI,SAAU,KACV1C,QAAS,OAPc,mBAWpByG,EAXoB,KAWbY,EAXa,KAsBrBhE,EAAgB,uCAAG,4BAAAiE,EAAA,+EAEOT,GAAaU,IAAI,kBAFxB,OAEXC,EAFW,OAIjBH,EAAS,CACL9F,KAAM6D,EACNuB,QAASa,EAAUC,KAAKrE,YANX,gDAcjBiE,EAAS,CACL9F,KAAMkE,EACNkB,QAPW,CACXrG,IAAK,gBACLC,UAAW,kBAXE,yDAAH,qDAuBhBiC,EAAe,uCAAG,WAAME,GAAN,eAAA4E,EAAA,+EAGQT,GAAaa,KAAK,iBAAkBhF,GAH5C,OAGV8E,EAHU,OAIhBxF,QAAQC,IAAIuF,GAEZH,EAAS,CACL9F,KAAM8D,EACNsB,QAASa,EAAUC,OARP,gDAgBhBJ,EAAS,CACL9F,KAAMkE,EACNkB,QAPW,CACXrG,IAAK,gBACLC,UAAW,kBAbC,yDAAH,sDAyCfyE,EAAgB,uCAAG,WAAM2C,GAAN,SAAAL,EAAA,+EAEXT,GAAae,OAAb,yBAAsCD,IAF3B,OAGjBN,EAAS,CACL9F,KAAMiE,EACNmB,QAASgB,IALI,gDAajBN,EAAS,CACL9F,KAAMkE,EACNkB,QAPW,CACXrG,IAAK,gBACLC,UAAW,kBAVE,yDAAH,sDAqBtB,OACI,cAAC,EAAgBsH,SAAjB,CACI5G,MAAO,CACHmC,UAAWqD,EAAMrD,UACjBf,WAAYoE,EAAMpE,WAClBC,gBAAiBmE,EAAMnE,gBACvBI,SAAU+D,EAAM/D,SAChB1C,QAASyG,EAAMzG,QACfuC,kBArGc,WACtB8E,EAAS,CACL9F,KAAM4D,KAoGF9B,mBACAb,kBACAC,aAjDS,WACjB4E,EAAS,CACL9F,KAAM+D,KAgDFvC,eA3CW,SAAA4E,GAEnBN,EAAS,CACL9F,KAAMgE,EACNoB,QAASgB,KAwCL3C,oBAZR,SAeKtF,EAAMoI,YCnIJ,YAACrB,EAAOC,GACnB,OAAQA,EAAOnF,MAEX,KAAKmE,EACD,kCACOe,GADP,IAEIxB,eAAgByB,EAAOC,UAG/B,KAAKhB,EACD,OAAO,2BACAc,GADP,IAEIxB,eAAe,CAAEyB,EAAOC,SAAV,mBAAsBF,EAAMxB,iBAC1Cd,YAAY,IAGpB,KAAKyB,EACD,OAAO,2BACAa,GADP,IAEItC,YAAY,IAGpB,KAAK0B,EACD,OAAO,2BACAY,GADP,IAEIxB,eAAgBwB,EAAMxB,eAAe2B,QAAO,SAAApC,GAAK,OAAIA,EAAMtB,MAAQwD,EAAOC,aAGlF,KAAKZ,EACD,OAAO,2BACAU,GADP,IAEIxB,eAAgBwB,EAAMxB,eAAe1B,KAAI,SAAAiB,GAAK,OAAIA,EAAMtB,MAAQwD,EAAOC,QAAQzD,IAAMwD,EAAOC,QAAUnC,OAG9G,KAAKsB,EACD,OAAO,2BACAW,GADP,IAEIxC,kBAAmByC,EAAOC,UAGlC,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIxC,kBAAmB,OAG3B,QACI,OAAOwC,ICsFJsB,GA/HI,SAAArI,GAEf,IAFyB,EASGyH,qBAAWa,GAPlB,CACjB/C,eAAgB,GAChBd,YAAY,EACZF,kBAAmB,OALE,mBASjBwC,EATiB,KASVY,EATU,KAcnBrE,EAAa,uCAAG,WAAMN,GAAN,eAAA4E,EAAA,6DAElBtF,QAAQC,IAAIS,GAFM,kBAKUmE,GAAaU,IAAI,cAAe,CAAEU,OAAQ,CAAEvF,cALtD,OAKR8E,EALQ,OAMdxF,QAAQC,IAAI,4BACZD,QAAQC,IAAIuF,GACZH,EAAS,CACL9F,KAAMmE,EACNiB,QAASa,EAAUC,KAAKS,SAVd,kDAadlG,QAAQC,IAAR,MAbc,0DAAH,sDAkBbiC,EAAY,uCAAG,WAAMM,GAAN,eAAA8C,EAAA,sEAEOT,GAAaa,KAAK,cAAelD,GAFxC,OAEXgD,EAFW,OAGjBxF,QAAQC,IAAIuF,GACZ,IACIH,EAAS,CACL9F,KAAMoE,EACNgB,QAASnC,IAEf,MAAO2D,GACLnG,QAAQC,IAAIkG,GAVC,2CAAH,sDAqBZzD,EAAa,uCAAG,WAAOlD,EAAIkB,GAAX,SAAA4E,EAAA,+EAERT,GAAae,OAAb,sBAAmCpG,GAAM,CAAEyG,OAAQ,CAAEvF,cAF7C,OAGd2E,EAAS,CACL9F,KAAMsE,EACNc,QAASnF,IALC,+CAQdQ,QAAQC,IAAR,MARc,wDAAH,wDAaboC,EAAe,uCAAG,WAAMG,GAAN,eAAA8C,EAAA,+EAGQT,GAAauB,IAAb,sBAAgC5D,EAAMtB,KAAOsB,GAHrD,OAGVgD,EAHU,OAIhBxF,QAAQC,IAAIuF,GACZH,EAAS,CACL9F,KAAMwE,EACNY,QAASa,EAAUC,KAAKjD,QAPZ,gDAWhBxC,QAAQC,IAAR,MAXgB,yDAAH,sDAwCrB,OACI,cAAC,EAAa4F,SAAd,CACI5G,MAAO,CACHgE,eAAgBwB,EAAMxB,eACtBd,WAAYsC,EAAMtC,WAClBF,kBAAmBwC,EAAMxC,kBACzBjB,gBACAkB,eACAE,aApES,WACjBiD,EAAS,CACL9F,KAAMqE,KAmEFlB,gBAEAC,mBA3Be,SAAAH,GACvB6C,EAAS,CACL9F,KAAMuE,EACNa,QAASnC,KAyBLH,kBACAC,aAnBS,WACjB+C,EAAS,CACL9F,KAAMyE,MAKV,SAeKtG,EAAMoI,YCzIJ,YAACrB,EAAOC,GACnB,OAAOA,EAAOnF,MACV,KAAK0E,EACD,MAAO,CACHpG,OAAQ6G,EAAOC,SAEvB,KAAKT,EACD,MAAO,CACHrG,OAAQ,MAEhB,QACI,OAAO4G,IC+BJ4B,GAtCK,SAAC3I,GAEjB,IAF2B,EAMAyH,qBAAWmB,GAJjB,CACjBzI,OAAQ,OAHe,mBAMpB4G,EANoB,KAMbY,EANa,KA0B3B,OACI,cAAC,EAAcQ,SAAf,CACI5G,MAAO,CACHpB,OAAQ4G,EAAM5G,OACdC,cArBU,SAACQ,EAAKC,GACxB8G,EAAS,CACL9F,KAAO0E,EACPU,QAAS,CACLrG,MACAC,eAKRgI,YAAW,WACPlB,EAAS,CACL9F,KAAM2E,MAEX,OAIH,SAMKxG,EAAMoI,YC9BJ,YAACrB,EAAOC,GACnB,OAAOA,EAAOnF,MACV,KAAK4E,EACL,KAAKG,EAED,OADAkC,aAAaC,QAAQ,QAAS/B,EAAOC,QAAQ+B,OACtC,2BACAjC,GADP,IAEIxG,aAAa,EACbD,QAAS,KACT2I,UAAU,IAElB,KAAKtC,EACD,OAAO,2BACAI,GADP,IAEIxG,aAAa,EACbU,QAAS+F,EAAOC,QAChBgC,UAAU,IAElB,KAAKnC,GACL,KAAKD,GACL,KAAKH,EAED,OADAoC,aAAaI,WAAW,SACjB,2BACAnC,GADP,IAEIiC,MAAO,KACP/H,QAAS,KACTV,YAAa,KACbD,QAAS0G,EAAOC,QAChBgC,UAAU,IAGlB,QACI,OAAOlC,IChCJoC,GAPG,SAAAH,GACVA,EACA7B,GAAaiC,SAASC,QAAQC,OAAO,gBAAkBN,SAEhD7B,GAAaiC,SAASC,QAAQC,OAAO,iBC4HrCC,GA9GG,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACVoB,EAAe,CACjBR,MAAOF,aAAaW,QAAQ,SAC5BlJ,YAAa,KACbU,QAAS,KACTX,QAAS,KACT2I,UAAU,GANgB,EASFxB,qBAAWiC,GAAaF,GATtB,mBAStBzC,EATsB,KASfY,EATe,KAWxBzF,EAAgB,uCAAG,WAAMyH,GAAN,iBAAA/B,EAAA,+EAEOT,GAAaa,KAAK,gBAAiB2B,GAF1C,OAEXC,EAFW,OAKbjC,EAAS,CACL9F,KAAM4E,EACNQ,QAAS2C,EAAU7B,OAIvB5D,IAXa,gDAeXhE,EAAS,CACXS,IAAK,KAAMiJ,SAAS9B,KAAKnH,IACzBC,UAAW,gBAGf8G,EAAS,CACL9F,KAAM6E,EACNO,QAAS9G,IAtBI,yDAAH,sDA4BhBgE,EAAkB,uCAAG,8BAAAyD,EAAA,6DACjBoB,EAAQF,aAAaW,QAAQ,WAE/BN,GAAUH,GAHS,kBAMK7B,GAAaU,IAAI,aANtB,OAMb+B,EANa,OAQnBjC,EAAS,CACL9F,KAAM8E,EACNM,QAAS2C,EAAU7B,KAAK9G,UAVT,gDAanBqB,QAAQC,IAAI,KAAMsH,UAClBlC,EAAS,CACL9F,KAAMgF,KAfS,yDAAH,qDAqBlBrG,EAAa,uCAAG,WAAMmJ,GAAN,iBAAA/B,EAAA,+EAEUT,GAAaa,KAAK,YAAa2B,GAFzC,OAERC,EAFQ,OAIdjC,EAAS,CACL9F,KAAM+E,EACNK,QAAS2C,EAAU7B,OAIvB5D,IAVc,gDAYd7B,QAAQC,IAAI,KAAMsH,SAAS9B,KAAKnH,KAC1BT,EAAS,CACXS,IAAK,KAAMiJ,SAAS9B,KAAKnH,IACzBC,UAAW,gBAGf8G,EAAS,CACL9F,KAAMgF,GACNI,QAAS9G,IApBC,yDAAH,sDAgCnB,OACI,cAAC,EAAYgI,SAAb,CACI5G,MAAO,CACHyH,MAAOjC,EAAMiC,MACbzI,YAAawG,EAAMxG,YACnBU,QAAS8F,EAAM9F,QACfX,QAASyG,EAAMzG,QACf2I,SAAUlC,EAAMkC,SAChB/G,mBACA1B,gBACA2D,qBACAC,aAjBS,WACjBuD,EAAS,CACL9F,KAAMiF,OAKV,SAaKsB,K,SCnGE0B,GArBK,SAAC,GAAyC,IAA5BC,EAA2B,EAAtCC,UAAyBhK,EAAa,8BACzDsC,QAAQC,IAAIvC,GACZ,IAAMF,EAAcG,qBAAWI,GACvBE,EAA8CT,EAA9CS,YAAa0I,EAAiCnJ,EAAjCmJ,SAAU9E,EAAuBrE,EAAvBqE,mBAQ/B,OANA1D,qBAAU,WACN0D,MAGD,IAGC,cAAC,IAAD,2BAAYnE,GAAZ,IAAoBiK,OAAS,SAAAjK,GAAK,OAAKO,GAAgB0I,EAGnD,cAACc,EAAD,eAAe/J,IAFf,cAAC,IAAD,CAAUgC,GAAG,WCLnBgH,GAAQF,aAAaW,QAAQ,SAC/BT,IACAG,GAAUH,IAyBCkB,OAtBf,WAGI,OACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIJ,UAAWjK,IACjC,cAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,gBAAgBJ,UAAW/H,IAC7C,cAAC,GAAD,CAAakI,OAAK,EAACC,KAAK,aAAaJ,UAAWxE,kBCnBjE6E,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.2ef418f0.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import { createContext } from 'react'\n\nconst authContext = createContext()\n\nexport default authContext","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion } = authContext;\n\n      // En caso de que el password o usuario no exista\n      useEffect(() => {\n        if(autenticado) {\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    // extraer de usuario\n    const { email, password } = usuario;\n\n    const onChange = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario quiere iniciar sesión\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // Validar que no haya campos vacios\n        if(email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        // Pasarlo al action\n        iniciarSesion({ email, password });\n    }\n\n\n\n    return ( \n        <div className=\"form-usuario\">\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\n\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\" />\n                    </div>\n                </form>\n\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                    Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = (props) => {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado,  registrarUsuario } = authContext;\n\n    // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\n    useEffect(() => {\n        if(autenticado) {\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    // extraer de usuario\n    const { nombre, email, password, confirmar } = usuario;\n\n    const onChange = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario quiere iniciar sesión\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // Validar que no haya campos vacios\n        if( nombre.trim() === '' || \n            email.trim() === '' || \n            password.trim() === '' || \n            confirmar.trim() === '' ) {\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n                return;\n            }\n\n        // // Password minimo de 6 caracteres\n        if(password.length < 6) {\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        // // Los 2 passwords son iguales\n        if(password !== confirmar) {\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n            return;\n        }\n\n        // Pasarlo al action\n        registrarUsuario({\n            nombre, \n            email, \n            password\n        });\n        console.log('se realizo la tarea');\n    }\n\n\n\n    return ( \n        <div className=\"form-usuario\">\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Obtener una cuenta</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <input \n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            placeholder=\"Tu Nombre\"\n                            value={nombre}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"confirmar\"\n                            name=\"confirmar\"\n                            placeholder=\"Repite tu Password\"\n                            value={confirmar}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrarme\" />\n                    </div>\n                </form>\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Volver a Iniciar Sesión\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevaCuenta;","import { createContext } from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    // Obtener el state del formulario\n    const proyectosContext = useContext(proyectoContext);\n    const { formulario, errorformulario,  mostrarFormulario, agregarProyecto, mostrarError } = proyectosContext;\n\n\n    // State para Proyecto\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n\n    // Extraer nombre de proyecto\n    const { nombre } = proyecto;\n\n    // Lee los contenidos del input\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario envia un proyecto\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        // Validar el proyecto\n        if(nombre === '') {\n            mostrarError();\n            return;\n        }\n\n        // agregar al state\n        agregarProyecto(proyecto)\n\n        // Reiniciar el form\n        guardarProyecto({\n            nombre: ''\n        })\n    }\n\n    // Mostrar el formulario\n    const onClickFormulario = () => {\n        mostrarFormulario();\n    }\n\n    return ( \n        <Fragment>\n            <button \n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ onClickFormulario }\n            >Nuevo Proyecto</button>\n\n            { formulario ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProyecto}\n                        >\n                            <input \n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Nombre Proyecto\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={onChangeProyecto}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Agregar Proyecto\"\n                            />\n\n                        </form>\n                ) : null }\n\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null }\n        </Fragment>\n     );\n}\n \nexport default NuevoProyecto;","import { createContext } from 'react'\n\nconst TareaContext = createContext()\n\nexport default TareaContext","import React, { useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Proyecto = ({proyecto}) => {\n    // Obtener el state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    // obtener la función del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { obtenerTareas } = tareasContext;\n\n    // Función para agregar el proyecto actual\n    const seleccionarProyecto = id => {\n        proyectoActual(id); // Fijar un proyecto actual\n        obtenerTareas(id); // Filtrar las tareas cuando se de click\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => seleccionarProyecto(proyecto._id) }\n            >{proyecto.nombre} </button>\n        </li>\n     );\n}\n \nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst ListadoProyectos = () => {\n\n    // Extrar proyectos de state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    // Obtener proyectos cuando carga el componente\n    \n    useEffect(() => {\n        // si hay un error\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerProyectos();\n        // eslint-disable-next-line\n    }, [mensaje]);\n\n    // revisar si proyectos tiene contenido\n    if(proyectos.length === 0 ) return <p>No hay proyectos, comienza creando uno</p>;\n\n    return ( \n\n        <ul className=\"listado-proyectos\">           \n        \n            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\n\n            <TransitionGroup>\n                {proyectos.map(proyecto => (\n                    <CSSTransition\n                        key={proyecto._id}\n                        timeout={200}\n                        classNames=\"proyecto\"\n                    >\n                        <Proyecto \n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </ul>\n     );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n\n            <NuevoProyecto />\n\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <ListadoProyectos />\n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, {useContext, useEffect} from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\n\nconst Barra = () => {\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSesion  } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n\n\n    return ( \n        <header className=\"app-header\">\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre} </span> </p> : null}\n            \n            <nav className=\"nav-principal\">\n                <button \n                    className=\"btn btn-blank-text cerrar-sesion\"\n                    onClick={() => cerrarSesion() }\n                >Cerrar Sesión</button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';  \nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n\n    // Extrar si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // obtener la función del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const {tareaseleccionada, agregarTarea, errortarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext\n    //const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n\n    // Effect que detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if(tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada)\n        } else {\n            guardarTarea({\n                nombre: ''\n            })\n        }\n    }, [  tareaseleccionada ]); \n\n    // State del formulario\n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    })\n\n    // extraer el nombre del proyecto\n    const { nombre } = tarea;\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return null;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;    \n\n    // Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // validar\n        if(nombre.trim() === '' ) {\n            validarTarea();\n            return;\n        }\n\n        // // Si es edición o si es nueva tarea\n        if(tareaseleccionada === null ) {\n             // agregar la nueva tarea al state de tareas\n             tarea.proyecto = proyectoActual._id\n             \n             agregarTarea(tarea)\n        } else {\n            // actualizar tarea existente\n            actualizarTarea(tarea);\n\n            // Elimina tareaseleccionada del state\n            limpiarTarea();\n        }\n        // Obtener y filtrar las tareas del proyecto actual\n        console.log(proyectoActual._id)\n        obtenerTareas(proyectoActual._id);\n\n        // reiniciar el form\n        guardarTarea({\n            nombre: ''\n        })\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input \n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"                        \n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null }\n        </div>\n     );\n}\n \nexport default FormTarea;","import React, { useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Tarea = ({tarea}) => {\n\n    // Extrar si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    // obtener la función del context de tarea\n    const tareasContext = useContext(tareaContext);\n    // const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\n    const { eliminarTarea, obtenerTareas, guardarTareaActual, actualizarTarea } = tareasContext;\n\n\n    // Extraer el proyecto\n    const [proyectoActual] = proyecto;\n \n    // Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual._id)\n    }\n\n    // Función que modifica el estado de las tareas\n    const cambiarEstado = tarea => {\n        if(tarea.estado) {\n            tarea.estado = false;\n        } else {\n            tarea.estado = true\n        }\n        actualizarTarea(tarea);\n    }\n\n    // Agrega una tarea actual cuando el usuario desea editarla\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return ( \n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre} </p>\n\n            <div className=\"estado\">\n                {tarea.estado \n                ?  \n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Completo</button>\n                    )\n                : \n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Incompleto</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button \n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea) }\n                >Editar</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n     );\n}\n \nexport default Tarea;","import React, { Fragment, useContext} from 'react';\nimport Tarea from './Tarea';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ListadoTareas = () => {    \n\n    // Extrar proyectos de state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminarProyecto } = proyectosContext;\n\n    // obtener las tareas del proyecto\n    const tareasContext = useContext(tareaContext);\n    const { tareasproyecto } = tareasContext;\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;\n\n    // Elimina un proyecto\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id)\n    }\n\n    return ( \n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre} </h2>\n\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0 \n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \n                    : \n                    <TransitionGroup>\n                    {tareasproyecto.map(tarea => (\n                        <CSSTransition\n                            key={tarea.id}\n                            timeout={200}\n                            classNames=\"tarea\"\n                        >\n                            <Tarea \n                                tarea={tarea}\n                            />\n                        </CSSTransition>\n                    ))}\n                    </TransitionGroup>\n                }\n                {/* {tareasproyecto.length === 0 \n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \n                    : tareasproyecto.map(tarea => (\n                        <Tarea key={tarea.id} tarea={tarea} />\n                    )) \n                } */}\n            </ul>\n\n            <button     \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={onClickEliminar}\n            >Eliminar Proyecto &times;</button>\n        </Fragment>\n     );\n}\n \nexport default ListadoTareas;","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nfunction Proyectos() {\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuarioAutenticado } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar />            \n\n            <div className=\"seccion-principal\">\n                <Barra />\n\n                <main>\n                    <FormTarea />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n    )\n}\n\nexport default Proyectos\n","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS'\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const ESTADO_TAREA = 'ESTADO_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';","import { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorformulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state, \n                errorformulario: true\n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload )\n            }\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload ),\n                proyecto: null\n            }\n        case PROYECTO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\n\n//import { v4 as uuid } from 'uuid'\n\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n        \n    const initialState = {\n        proyectos : [],        \n        formulario : false,\n        errorformulario: false,\n        proyecto: null, \n        mensaje: null\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    // Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    // Obtener los proyectos\n    \n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Agregar nuevo proyecto\n    \n    const agregarProyecto = async proyecto => {\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            console.log(resultado);\n            // Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Valida el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    } \n\n    // Selecciona el Proyecto que el usuario dio click\n    const proyectoActual = proyectoId => {\n        // console.log(proyectoId)\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    // Elimina un proyecto\n    \n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n        \n    )\n}\n\nexport default ProyectoState;","import {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    \n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n\n        case TAREAS_PROYECTO:\n            return{\n                ...state,\n                tareasproyecto: action.payload\n            } \n            \n        case AGREGAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\n                errortarea: false\n            }\n\n        case VALIDAR_TAREA:\n            return {\n                ...state,\n                errortarea: true\n            }\n        \n        case ELIMINAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload )\n            }\n         \n        case ACTUALIZAR_TAREA:        \n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\n            }\n        \n        case TAREA_ACTUAL:\n            return {\n                ...state,\n                tareaseleccionada: action.payload \n            }        \n\n        case LIMPIAR_TAREA:\n            return {\n                ...state,\n                tareaseleccionada: null \n            }        \n\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react'\nimport TareaContext from './tareaContext'\nimport tareaReducer from './tareaReducer'\n//import uuid from 'uuid/dist/v4';\nimport clienteAxios from '../../config/axios'\n\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    \n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types'\n\nconst TareaState = props  => {\n    \n    const initialState = {        \n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    // Crear disparch y state\n    const [ state, dispatch ] = useReducer(tareaReducer, initialState)\n\n    // Crear las funciones\n\n    // Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n\n        console.log(proyecto);\n\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto }});\n            console.log('resultado obtener tareas');\n            console.log(resultado);\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //  Agregar una tarea al proyeto seleccionado\n    const agregarTarea = async tarea => {\n        //tarea.id = uuid()\n        const resultado = await clienteAxios.post('/api/tareas', tarea)\n        console.log(resultado)\n        try {\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: tarea\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto }});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Edita o modifica una tarea\n    const actualizarTarea = async tarea => {\n\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n            console.log(resultado);\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n                \n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Cambia el estado de cada tarea\n    // const cambiarEstadoTarea = tarea => {\n    //     dispatch({\n    //         type: ESTADO_TAREA,\n    //         payload: tarea\n    //     })\n    // }\n\n    // Extrae una tarea para edición\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea \n        })\n    }\n\n   \n\n    // Elimina la tarea seleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{                \n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                //cambiarEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nconst AlertaState = (props) => {\n    \n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch ] = useReducer(alertaReducer, initialState)\n\n    // Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type:  MOSTRAR_ALERTA,\n            payload: {\n                msg, \n                categoria\n            }\n        });\n\n        // Después de 5 segundos limpiar la alerta\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n    return (\n        <alertaContext.Provider \n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState","import { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case REGISTRO_EXITOSO:\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO: \n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload, \n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload, \n                cargando: false\n            }\n        \n        default:\n            return state;\n    }\n}","import clienteAxios from './axios'\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token']\n    }\n}\nexport default tokenAuth","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios'\nimport tokenAuth from '../../config/tokenAuth'\n\n\nimport { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\n// import authContext from './authContext';\n// import authReducer from './authReducer';\n\nconst AuthState = ({children}) => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null, \n        mensaje: null, \n        cargando: true\n    }\n\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState)\n\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos)\n                //console.log(respuesta.data)\n\n                dispatch({\n                    type: REGISTRO_EXITOSO,\n                    payload: respuesta.data\n                })\n\n                // Obtener el usuario\n                usuarioAutenticado()\n                \n        } catch (error) {\n            //console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n                \n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })            \n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            tokenAuth(token)\n        }\n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            //console.log(respuesta);\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            })\n        } catch (error) {\n            console.log(error.response)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos)\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return(\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\nexport default AuthState","// Esto es un haiar order component\n\nimport React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props  }) => {\n    console.log(props)\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return ( \n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\n            <Redirect to=\"/\" />\n        )  : (\n            <Component {...props} />\n        ) } />\n\n     );\n}\n \nexport default RutaPrivada;","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaSatate';\nimport AlertaState  from './context/alertas/alertaState'\nimport AuthState from './context/autenticacion/authState'\nimport tokenAuth from './config/tokenAuth'\nimport RutaPrivada from './components/rutas/RutaPrivada'\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token')\nif (token) {\n    tokenAuth(token)\n}\n\nfunction App() {\n    \n    // \n    return (\n        <ProyectoState>\n            <TareaState>\n                <AlertaState>\n                    <AuthState>\n                        <Router>\n                            <Switch>\n                                <Route exact path=\"/\" component={Login} />\n                                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n                            </Switch>\n                        </Router>\n                    </AuthState>\n                </AlertaState>\n            </TareaState>\n        </ProyectoState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}